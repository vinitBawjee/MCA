1. Activities and Services


    1.1 Overview of Mobile Technologies, Mobile Platform Features, Architecture, Versions, and Development Tools

        -> Overview of Mobile Technologies
            Mobile technology ek rapidly growing field hai jisme smartphone, tablet, wearables aur IoT devices included hote hain.
            Ye technologies mainly wireless communication (4G/5G, Wi-Fi, Bluetooth, NFC) aur mobile applications ke around hoti hain.

            Real-life example:
                - Ola/Uber app GPS + Mobile Internet + Payment Gateway ka use karti hai.
                - WhatsApp: instant messaging via internet.

        -> Mobile Platform Features
            Har mobile OS (Android, iOS, Windows, etc.) kuch features provide karta hai:

                (1) Touchscreen Interface – Gesture support (tap, swipe, pinch).
                    Example: Google Maps me pinch karke zoom karna.

                (2) App Store/Play Store – Application distribution platform.
                    Example: Play Store se Zomato download karna.

                (3) Connectivity – 4G/5G, Wi-Fi, Bluetooth, NFC.

                (4) Security – Sandboxing, permissions, biometric authentication.

                (5) Cloud Integration – Google Drive, iCloud, OneDrive.

            Syntax (Android - Permission Example):
                <uses-permission android:name="android.permission.INTERNET"/>

        -> Mobile Architecture

            Mobile architecture define karti hai ki applications aur system resources kaise interact karte hain.
            Mostly layered architecture hoti hai:

            Android Architecture (Example):
                Applications Layer – User apps (WhatsApp, Instagram).
                Application Framework – Activity Manager, Window Manager.
                Libraries & Runtime – SQLite, WebKit, ART/Dalvik VM.
                Linux Kernel – Hardware drivers, power management.

            Real-life Example:
                Jab tum YouTube open karte ho → Application layer request karta hai → Framework manage karta hai → Libraries video decoding handle karti hain → Kernel hardware resources (CPU/GPU) allocate karta hai.

        -> Versions of Mobile Platforms

            Mobile OS har kuch saal me naye versions release karte hain jisme features + security + performance improvements hoti hain.

            Android Versions Example:
                Android 5.0 (Lollipop) – Material Design introduced.
                Android 6.0 (Marshmallow) – App permissions model.
                Android 10 – Dark mode.
                Android 14/15 – Better privacy, AI features.

            iOS Versions Example:
                iOS 10 – Siri integration.
                iOS 13 – Dark mode.
                iOS 17 – StandBy mode, improved widgets.

            Syntax (Check device version in Android):
                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q) {
                    Toast.makeText(this, "Running on Android 10 or above", Toast.LENGTH_SHORT).show();
                }

        -> Development Tools

            Mobile app banane ke liye developers ko alag-alag tools milte hain:

            Android:
                - Android Studio – Official IDE.
                - Languages – Java, Kotlin.
                - Emulator – Device testing.

            Syntax (Simple Activity Example in Java):
                public class MainActivity extends AppCompatActivity {
                    @Override
                    protected void onCreate(Bundle savedInstanceState) {
                        super.onCreate(savedInstanceState);
                        setContentView(R.layout.activity_main);
                    }
                }

            iOS:
                - Xcode – IDE for iOS apps.
                - Languages – Swift, Objective-C.

            Swift Example (Hello World):
                import UIKit

                class ViewController: UIViewController {
                    override func viewDidLoad() {
                        super.viewDidLoad()
                        print("Hello iOS World!")
                    }
                }

            Cross-Platform:
                - React Native (JavaScript).
                - Flutter (Dart).
                - Xamarin (.NET, C#).

            Flutter Example (Hello World):
                import 'package:flutter/material.dart';

                void main() => runApp(MaterialApp(home: Text('Hello Flutter')));

        -> Conclusion

            Mobile technologies ne aaj ke time me lifestyle aur businesses dono change kar diye hain. Har platform ki apni features, architecture, versions aur tools hote hain jo development aur user experience ko define karte hain.


    1.2 Activity: Life Cycle, Intent: Communication with Multiple Screen and Built-In Application

        -> Activity in Android
            Definition:
            Activity ek single screen with UI hoti hai Android app ke andar.
            Har app ke andar multiple activities ho sakti hain (e.g., LoginActivity, DashboardActivity).

            Real-life Example:
                WhatsApp → Chat Screen ek activity hai, Status ek alag activity hai, Calls ek alag activity hai.

        -> Activity Life Cycle
            Activity ke 6 main callback methods hote hain jo system automatically call karta hai.

            Phases of Activity:
                (1) onCreate() → Activity create hoti hai (UI load hota hai).
                    @Override
                    protected void onCreate(Bundle savedInstanceState) {
                        super.onCreate(savedInstanceState);
                        setContentView(R.layout.activity_main);
                    }

                    Example: Jab app pehli baar open hota hai → UI load hota hai.

                (2) onStart() → Activity visible hoti hai but interactive nahi.

                (3) onResume() → Activity visible aur interactive ho jati hai.
                    Example: Jab tum YouTube open karke video play karte ho.

                (4) onPause() → Activity partially visible (dusra app open karte time).

                (5) onStop() → Activity screen se remove hoti hai (background me chali jati hai).

                (6) onDestroy() → Activity destroy ho jati hai (close ho jati hai).

                Real-life Example Flow:
                    WhatsApp → Chat screen open (onCreate → onStart → onResume).
                    Back button dabao → (onPause → onStop → onDestroy).

        -> Intent in Android
            Definition:
                Intent ek messaging object hai jo ek activity se dusri activity ya built-in app ke saath communication karta hai.

            Types of Intent:
                1. Explicit Intent → App ke andar hi ek activity se dusri activity call karne ke liye.
                Example: LoginActivity → DashboardActivity.  
                    Intent i = new Intent(MainActivity.this, SecondActivity.class);
                    startActivity(i);

                2. Implicit Intent → Built-in apps ko call karne ke liye (dialer, camera, gallery, browser).
                Example: Dialer open karna.
                    Intent callIntent = new Intent(Intent.ACTION_DIAL);
                    callIntent.setData(Uri.parse("tel:9876543210"));
                    startActivity(callIntent);

        -> Communication with Multiple Screens
            Jab ek activity se dusri activity pe data bhejna ho to Intent + putExtra() + getExtra() ka use hota hai.

            Example (Pass Data from Activity A → Activity B):
                // Activity A
                Intent i = new Intent(MainActivity.this, SecondActivity.class);
                i.putExtra("username", "Bunty");
                startActivity(i);

                // Activity B
                String name = getIntent().getStringExtra("username");
                Toast.makeText(this, "Hello " + name, Toast.LENGTH_SHORT).show();

            Real-life Example:
                Login screen se username ko dashboard me show karna.

        -> Communication with Built-in Applications

            Camera open karna:
                Intent cameraIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
                startActivity(cameraIntent);

            Browser open karna:
                Intent browserIntent = new Intent(Intent.ACTION_VIEW, Uri.parse("https://www.google.com"));
                startActivity(browserIntent);

            Gallery open karna:
                Intent galleryIntent = new Intent(Intent.ACTION_PICK, MediaStore.Images.Media.EXTERNAL_CONTENT_URI);
                startActivity(galleryIntent);

            Real-life Example:
                - Facebook → Profile picture update → Gallery ya Camera open hota hai.
                - Zomato → Call restaurant → Dialer open hota hai.

        -> Conclusion

            - Activity Life Cycle samajhna zaroori hai kyunki ye define karta hai ki app ka behavior har state me kaisa hoga.
            - Intent ek strong communication mechanism hai jo multiple screens + built-in apps ko easily connect karta hai.

    1.3 Fragment: Introduction, Need, Life Cycle, Creation and Interfragment Communication


    1.4 User Interface Containers and Screen Elements


    1.5 Dialogs: Introduction, Need, Types


    1.6 Service: Overview, Life Cycle, Types



